---
// Los datos de Instagram ahora se cargan dinámicamente desde el API
// Datos de fallback en caso de que el API no esté disponible
const FALLBACK_POSTS = [
  {
    id: 'DNDtwCXIcoF',
    url: 'https://www.instagram.com/p/DNDtwCXIcoF/?utm_source=ig_web_copy_link&igsh=MzRlODBiNWFlZA==',
    title: 'Transformación Increíble',
    description: 'Mira esta increíble transformación de uno de nuestros clientes.',
    details: 'Cliente dedicado que logró sus objetivos en 3 meses con nuestro programa personalizado.',
    likes: '245',
    comments: '32'
  }
];
---

<section id="transformaciones" class="py-20 bg-black">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">
        Cambios <span class="text-yellow-400">Físicos</span>
      </h2>
    </div>

    <!-- Instagram Posts Grid -->
    <div id="instagram-posts-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      <!-- Los posts se cargarán dinámicamente aquí -->
      <div class="instagram-loading col-span-full flex justify-center items-center py-20">
        <div class="text-center">
          <svg class="animate-spin h-12 w-12 text-yellow-400 mx-auto mb-4" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <p class="text-gray-300">Cargando transformaciones...</p>
        </div>
      </div>
      
      <!-- Placeholders para futuros posts -->
      <div class="group cursor-pointer transform transition-all duration-300 hover:scale-105">
        <div class="relative overflow-hidden rounded-2xl shadow-lg bg-gradient-to-br from-gray-800 to-gray-900 aspect-square">
          <div class="w-full h-full bg-gradient-to-br from-gray-700 to-gray-800 flex items-center justify-center">
            <div class="text-center">
              <svg class="w-12 h-12 text-gray-500 mx-auto mb-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
              </svg>
              <p class="text-gray-400 text-sm">Próximamente</p>
            </div>
          </div>
          <div class="absolute bottom-0 left-0 right-0 p-6">
            <h3 class="text-white font-bold text-lg mb-2">Próximamente</h3>
            <p class="text-gray-300 text-sm">Más transformaciones increíbles próximamente.</p>
          </div>
        </div>
      </div>
      
      <div class="group cursor-pointer transform transition-all duration-300 hover:scale-105">
        <div class="relative overflow-hidden rounded-2xl shadow-lg bg-gradient-to-br from-gray-800 to-gray-900 aspect-square">
          <div class="w-full h-full bg-gradient-to-br from-gray-700 to-gray-800 flex items-center justify-center">
            <div class="text-center">
              <svg class="w-12 h-12 text-gray-500 mx-auto mb-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
              </svg>
              <p class="text-gray-400 text-sm">Próximamente</p>
            </div>
          </div>
          <div class="absolute bottom-0 left-0 right-0 p-6">
            <h3 class="text-white font-bold text-lg mb-2">Próximamente</h3>
            <p class="text-gray-300 text-sm">Más transformaciones increíbles próximamente.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Call to Action -->
    <div class="text-center mt-16">
      <p class="text-lg text-gray-300 mb-6">¿Quieres ser el próximo en transformar tu vida?</p>
      <button class="inline-flex items-center justify-center bg-yellow-400 hover:bg-yellow-500 active:bg-yellow-600 text-black font-semibold rounded-lg text-lg px-8 py-4 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-offset-2 focus:ring-offset-black shadow-lg hover:shadow-xl transform hover:scale-105">
        Comenzar Mi Transformación
      </button>
    </div>
  </div>
</section>

<!-- Modal -->
<div id="instagramModal" class="fixed inset-0 bg-black/90 backdrop-blur-md z-50 hidden items-center justify-center p-4">
  <div class="bg-transparent rounded-3xl max-w-lg w-full max-h-[90vh] overflow-hidden shadow-2xl transform transition-all duration-300 scale-95 opacity-0" id="modalContent">
    <!-- Modal Header -->
    <div class="flex items-center justify-end p-4 absolute top-0 right-0 z-10">
      <button onclick="closeModal()" class="bg-black/50 hover:bg-black/70 text-white rounded-full p-2 transition-all duration-200 backdrop-blur-sm">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    
    <!-- Modal Body -->
    <div class="" id="modalBody">
      <!-- Content will be dynamically inserted here -->
    </div>
  </div>
</div>

<script>
  // Declaraciones de tipo para funciones globales
  declare global {
    interface Window {
      openModal: (postId: string) => void;
      closeModal: () => void;
    }
  }

  // Interfaz para los datos de Instagram
  interface InstagramPost {
    id: string;
    url: string;
    title: string;
    description: string;
    details: string;
    likes: string;
    comments: string;
    imageUrl?: string;
    timestamp?: number;
  }

  // Variable global para almacenar los posts
  let instagramPosts: Record<string, InstagramPost> = {};

  // Datos de fallback
  const fallbackPosts: InstagramPost[] = [
    {
      id: 'DNDtwCXIcoF',
      url: 'https://www.instagram.com/p/DNDtwCXIcoF/?utm_source=ig_web_copy_link&igsh=MzRlODBiNWFlZA==',
      title: 'Transformación Increíble',
      description: 'Mira esta increíble transformación de uno de nuestros clientes.',
      details: 'Cliente dedicado que logró sus objetivos en 3 meses con nuestro programa personalizado.',
      likes: '245',
      comments: '32'
    }
  ];

  // Función para obtener posts desde el API
  async function fetchInstagramPosts(): Promise<InstagramPost[]> {
    try {
      const response = await fetch('/api/instagram');
      const data = await response.json();
      
      if (data.success && data.posts) {
        return data.posts;
      } else {
        console.warn('API response not successful, using fallback data');
        return fallbackPosts;
      }
    } catch (error) {
      console.error('Error fetching Instagram posts:', error);
      return fallbackPosts;
    }
  }

  // Función para crear el HTML de un post
  function createPostHTML(post: InstagramPost): string {
    return `
      <div class="group cursor-pointer transform transition-all duration-300 hover:scale-105" 
           onclick="openModal('${post.id}')">
        <div class="relative overflow-hidden rounded-2xl shadow-lg bg-gradient-to-br from-gray-900 to-black aspect-square">
          <!-- Instagram Embed Container -->
          <div id="instagram-${post.id}" class="instagram-post-container w-full h-full bg-gray-800 flex items-center justify-center">
            <div class="loading-spinner text-white">
              <svg class="animate-spin h-8 w-8 text-yellow-400" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </div>
          </div>
          
          <!-- Overlay con información en hover -->
          <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-black/60 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col justify-between p-6 z-10">
            <div class="text-center">
              <h3 class="text-white font-bold text-lg mb-2">${post.title}</h3>
              <p class="text-gray-300 text-sm">${post.description}</p>
            </div>
            <div class="flex justify-center space-x-6">
              <div class="flex items-center text-white">
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-sm font-medium">${post.likes || '0'}</span>
              </div>
              <div class="flex items-center text-white">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
                <span class="text-sm font-medium">${post.comments || '0'}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    `;
  }

  // Función para cargar posts de Instagram
  async function loadInstagramPosts() {
    const grid = document.getElementById('instagram-posts-grid');
    const loading = document.querySelector('.instagram-loading');
    
    if (!grid) return;
    
    try {
      // Obtener posts del API
      const posts = await fetchInstagramPosts();
      
      // Convertir array a objeto para compatibilidad
      instagramPosts = {};
      posts.forEach(post => {
        instagramPosts[post.id] = post;
      });
      
      // Ocultar loading
       if (loading) {
         (loading as HTMLElement).style.display = 'none';
       }
      
      // Renderizar posts
      const postsHTML = posts.map(post => createPostHTML(post)).join('');
      
      // Agregar posts al grid (antes de los placeholders)
      const placeholders = grid.querySelectorAll('.group:not([onclick])');
      const firstPlaceholder = placeholders[0];
      
      if (firstPlaceholder) {
        firstPlaceholder.insertAdjacentHTML('beforebegin', postsHTML);
      } else {
        grid.innerHTML = postsHTML + grid.innerHTML;
      }
      
      // Cargar iframes de Instagram
      await loadInstagramIframes(posts);
      
    } catch (error) {
      console.error('Error loading Instagram posts:', error);
      
      // Mostrar error en lugar del loading
      if (loading) {
        loading.innerHTML = `
          <div class="text-center">
            <svg class="w-12 h-12 text-red-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <p class="text-gray-300">Error al cargar las transformaciones</p>
            <button onclick="loadInstagramPosts()" class="mt-2 text-yellow-400 hover:text-yellow-300 underline">Reintentar</button>
          </div>
        `;
      }
    }
  }

  // Función para cargar los iframes de Instagram
  async function loadInstagramIframes(posts: InstagramPost[]) {
    for (const post of posts) {
      const container = document.getElementById(`instagram-${post.id}`);
      if (container) {
        const spinner = container.querySelector('.loading-spinner');
        
        try {
          const embedUrl = post.url.replace(/\?.*$/, '') + 'embed/captioned/?cr=1&v=14&wp=1080&rd=https%3A%2F%2Fwww.instagram.com&rp=%2Fp%2F' + post.id;
          
          const iframe = document.createElement('iframe');
          iframe.src = embedUrl;
          iframe.width = '100%';
          iframe.height = '400';
          iframe.frameBorder = '0';
          iframe.scrolling = 'no';
          iframe.setAttribute('allowtransparency', 'true');
          iframe.style.border = 'none';
          iframe.style.borderRadius = '0.5rem';
          iframe.loading = 'lazy';
          
          iframe.onload = () => {
            if (spinner) {
              (spinner as HTMLElement).style.display = 'none';
            }
          };
          
          iframe.onerror = () => {
            if (spinner) {
              spinner.innerHTML = '<p class="text-gray-400">Error al cargar el post</p>';
            }
          };
          
          container.appendChild(iframe);
        } catch (error) {
          console.error('Error loading Instagram iframe:', error);
          if (spinner) {
            spinner.innerHTML = '<p class="text-gray-400">Error al cargar el post</p>';
          }
        }
      }
    }
  }

  // Cargar posts cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', loadInstagramPosts);

  function openModal(postId: string) {
    const modal = document.getElementById('instagramModal');
    const modalContent = document.getElementById('modalContent');
    const modalBody = document.getElementById('modalBody');
    const post = instagramPosts[postId as keyof typeof instagramPosts];

    if (!post || !modal || !modalContent || !modalBody) return;

    // Create proper embed URL without header
    const embedUrl = post.url.replace(/\?.*$/, '') + 'embed/captioned/?cr=1&v=14&wp=1080&rd=https%3A%2F%2Fwww.instagram.com&rp=%2Fp%2F' + postId;

    // Update modal content - solo mostrar la foto
    modalBody.innerHTML = `
      <div class="instagram-embed-modal bg-transparent rounded-lg overflow-hidden">
        <iframe src="${embedUrl}" 
                width="100%" 
                height="600" 
                frameborder="0" 
                scrolling="no" 
                allowtransparency="true"
                loading="lazy"
                style="border: none; border-radius: 0.75rem;">
        </iframe>
      </div>
    `;

    // Show modal with animation
    modal.classList.remove('hidden');
    modal.classList.add('flex');
    
    setTimeout(() => {
      modalContent.classList.remove('scale-95', 'opacity-0');
      modalContent.classList.add('scale-100', 'opacity-100');
    }, 10);
  }

  function closeModal() {
    const modal = document.getElementById('instagramModal');
    const modalContent = document.getElementById('modalContent');
    
    if (!modal || !modalContent) return;
    
    modalContent.classList.remove('scale-100', 'opacity-100');
    modalContent.classList.add('scale-95', 'opacity-0');
    
    setTimeout(() => {
      modal.classList.remove('flex');
      modal.classList.add('hidden');
    }, 300);
  }

  // Close modal when clicking outside
  const modalElement = document.getElementById('instagramModal');
  if (modalElement) {
    modalElement.addEventListener('click', function(e) {
      if (e.target === this) {
        closeModal();
      }
    });
  }

  // Close modal with Escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeModal();
    }
  });

  // Make functions globally available
  window.openModal = openModal;
  window.closeModal = closeModal;
</script>

<!-- Instagram embeds are loaded via iframe, no external script needed -->

<style>
  .instagram-post-container {
    position: relative;
    overflow: hidden;
  }
  
  .instagram-post-container iframe {
    position: absolute;
    top: -60px;
    left: 0;
    width: 100%;
    height: calc(100% + 60px);
    object-fit: cover;
  }
  
  .instagram-embed-modal iframe {
    max-width: 100%;
    border-radius: 0.75rem;
    margin-top: -60px;
    height: calc(100% + 60px);
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
  }
  
  /* Formato 1:1 para las cards */
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  
  /* Asegurar que el contenido del iframe se ajuste correctamente */
  .instagram-post-container .instagram-media {
    margin: 0 !important;
    max-width: none !important;
    width: 100% !important;
    height: 100% !important;
  }
  
  /* Mejorar la transición del overlay */
  .group:hover .group-hover\:opacity-100 {
    backdrop-filter: blur(2px);
  }
</style>

<style>
  #instagramModal {
    backdrop-filter: blur(8px);
  }
  
  #modalContent {
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
</style>